name: Build and Push Docker Image to Docker Hub
# Action already created to build and deploy image to github, congiure Secrets in github Repository 
on: push
jobs:
  push_to_registry:
    name: push docker image to hub
    runs-on: ubuntu-latest
    steps:
      - name: check repository
        uses: actions/checkout@v4

      - name: login to docker registry
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}

      - name: build and push docker image to registry
        uses: docker/build-push-action@v5
        with:
          context: #sets the context tot the default directory 
          push: true
          tags: uzair102/u_repo:image_from_github_actions_v1
  
  deploy_to_ec2:
    name: Deploy to EC2
    needs: push_to_registry
    runs-on: ubuntu-latest
    env:
      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      EC2_URL: ${{ secrets.EC2_URL }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
    steps:
    - name: Set up SSH key
      run: |
        mkdir -p /home/runner/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | tr -d '\r' > /home/runner/.ssh/App_instance_ssh.pem
        chmod 400 /home/runner/.ssh/App_instance_ssh.pem
        ssh-keyscan -H ${{ secrets.EC2_URL }} >> /home/runner/.ssh/known_hosts

    - name: Pull and run Docker image on EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i /home/runner/.ssh/App_instance_ssh.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_URL }} << 'EOF'
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker stop $(docker ps -q) || true
          docker system prune -f
          docker pull uzair102/u_repo:image_from_github_actions_v1
          docker run -d --name weather_app_container -p 3000:3000 uzair102/u_repo:image_from_github_actions_v1
        EOF
