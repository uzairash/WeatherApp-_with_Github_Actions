name: Build and Push Docker Image to Docker Hub
# Action already created to build and deploy image to github, congiure Secrets in github Repository 
on: push
jobs:
  # push_to_registry:
  #   name: push docker image to hub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: check repository
  #       uses: actions/checkout@v4

  #     - name: login to docker registry
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{secrets.DOCKERHUB_USERNAME}}
  #         password: ${{secrets.DOCKERHUB_PASSWORD}}

  #     - name: build and push docker image to registry
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: #sets the context tot the default directory 
  #         push: true
  #         tags: uzair102/u_repo:image_from_github_actions_v1
  
  deploy_to_ec2:
    #needs: push_to_registry
    name: deploy_to_ec2
    runs-on: ubuntu-latest
    env:
      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      EC2_URL: ${{ secrets.EC2_URL }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
    steps:
    - name: Set up SSH key
      run: |
        mkdir -p /home/runner/.ssh
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > /home/runner/.ssh/App_instance_ssh.pem
        chmod 400 /home/runner/.ssh/App_instance_ssh.pem
        ssh-keyscan -p 22 ${{ secrets.EC2_URL }} >> /home/runner/.ssh/known_hosts
    # then you can run commands/scripts directly on the EC2 instance e.g.:
    - name: Create a new file on the EC2 instance with "hello-world"
      run: |
        pwd
        ssh -o StrictHostKeyChecking=no -i /home/runner/.ssh/App_instance_ssh.pem ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_URL }} "echo "hello-world" >> new_file.txt"

